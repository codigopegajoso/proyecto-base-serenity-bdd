buildscript {
    ext.serenityCoreVersion = '3.3.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$serenityCoreVersion")
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id "org.sonarqube" version "3.3"
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

repositories {
    mavenCentral()
}

defaultTasks 'clean', 'test', 'aggregate', 'sonarqube'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    junitVersion = '5.8.2'
    assertJVersion = '3.22.0'
    lombokVersion = '1.18.22'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation ("net.serenity-bdd:serenity-core:${serenityCoreVersion}"){
        exclude group: 'org.apache.groovy', module: 'groovy'
    }
    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"

    implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    implementation "org.assertj:assertj-core:${assertJVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

serenity {
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)